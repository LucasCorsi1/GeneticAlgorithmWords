@page "/readwords"
@using GeneticAlgorithmWords.GA
@using System.Timers
@using GeneticSharp.Domain


<style>
    .inputTarget {
        width: 100%;
        padding: 10px 15px;
        margin-right: 20px;
        border-radius: 4px;
        border: 1px solid #a2a2a2;
        outline-color: #4fa2ff;
    }

    .btnExecute {
        border: none;
        background: #4fa2ff;
        color: #fff;
        border-radius: 4px;
        padding: 10px 20px;
        font-weight: 600;
        outline-color: #4fa2ff;
    }

    .textAreaContent {
        flex: 1;
        margin-top: 20px;
        border-radius: 4px;
        border: 1px solid #a2a2a2;
        outline-color: #4fa2ff;
        padding: 20px 25px;
    }

    .fitness-grid {
        font-size: 30px;
        font-weight: bold;
    }
</style>

<div style="display:flex; flex-direction: column;">
    <h1>Interpretador de Palavras</h1>
    <div style="display: flex; flex: 1;  margin-top: 20px">
        <input class="inputTarget" id="targeet" placeholder="Digite uma frase..." @bind="Target" />
        <button class="btnExecute" @onclick="Main">Executar</button>
    </div>
    <div class=" fitness-grid">
        <p>⬥ Gen: @GeneticAlgo?.GenerationsNumber </p>
        <p>⬥ Fitness: @GeneticAlgo?.Fitness </p>
        <p>⬥ Tempo:  @GeneticAlgo?.Counter</p>
    </div>
</div>



@code {
    private string Target { get; set; }

    private GeneticAlgorithmWords GeneticAlgo;

    private async Task Main()
    {
        await Run();
    }

    private async Task Run()
    {
        GeneticAlgo = new GeneticAlgorithmWords();
        GeneticAlgo.StateHasChanged += StateHasChanged;
        GeneticAlgo.StartGeneticAlgo(Target);
    }
}
