@page "/readwords"
@using GeneticAlgorithmWords.GA
@inject IJSRuntime JsRuntime

<style>
    .inputTarget {
        width: 100%;
        padding: 10px 15px;
        margin-right: 20px;
        border-radius: 4px;
        border: 1px solid #a2a2a2;
        outline-color: #4fa2ff;
    }

    .btnExecute {
        border: none;
        background: #4fa2ff;
        color: #fff;
        border-radius: 4px;
        padding: 10px 20px;
        font-weight: 600;
        outline-color: #4fa2ff;
    }

    .textAreaContent {
        flex: 1;
        margin-top: 20px;
        border-radius: 4px;
        border: 1px solid #a2a2a2;
        outline-color: #4fa2ff;
        padding: 20px 25px;
    }

    .fitness-grid {
        font-size: 30px;
        font-weight: bold;
    }
</style>

<div style="display:flex; flex-direction: column;">
    <h1>Interpretador de Palavras</h1>
    <div style="display: flex; flex: 1;  margin-top: 20px">
        <input class="inputTarget" id="targeet" placeholder="Digite uma frase..." @bind="Target" />
        <button class="btnExecute" @onclick="Main">Executar</button>
    </div>
    <div class=" fitness-grid">
        <p>⬥ Geração: @GeneticAlgo?.GenerationsNumber </p>
        <p>⬥ Fitness: @GeneticAlgo?.Fitness </p>
        <p>⬥ Tempo:  @GeneticAlgo?.Counter</p>
        @{
            if (GeneticAlgo?.Genes != null)
                foreach (var gene in GeneticAlgo?.Genes)
                {
                    Current += gene.Value.ToString();
                    CurrentTextArea += gene.Value.ToString();
                    if (Current.Length == Target.Length)
                    {
                        Current += "\r\n";
                        CurrentTextArea += "\r\n";
                    }
                }
            <p>⬥ Melhor Cromossomo:  @Current</p>
        }
    </div>
    <textarea rows="10" @bind="CurrentTextArea" class="textAreaContent" scrollTop ="scrollHeight" ></textarea>
    @{ Current = string.Empty; }
</div>


@code {
    private string Target { get; set; }
    private string Current { get; set; }
    private string CurrentTextArea { get; set; }
    private GeneticAlgorithmWords GeneticAlgo;
    private async Task Main() => await Run();
    private async Task Run()
    {
        GeneticAlgo = new GeneticAlgorithmWords();
        GeneticAlgo.StateHasChanged += StateHasChanged;
        GeneticAlgo.StartGeneticAlgo(Target);
    }
}
